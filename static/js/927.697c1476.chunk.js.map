{"version":3,"file":"static/js/927.697c1476.chunk.js","mappings":"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","sources":["webpack://react-project1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-project1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-project1/./src/components/Profile/Profile.module.css?b512","webpack://react-project1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://react-project1/./src/components/common/FormsControls/FormControls.module.css?2a3b","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://react-project1/./src/components/Login/Login.module.css?3530"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__FYAQ6\",\"myPostTitle\":\"MyPosts_myPostTitle__zG9Go\",\"newpost\":\"MyPosts_newpost__Oxbxl\",\"posts\":\"MyPosts_posts__CMNQ8\",\"postButton\":\"MyPosts_postButton__JVkeB\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__AdKXa\",\"post\":\"Post_post__+fweG\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.post}>\r\n                <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSV9JqkBrfwaFEIRaVhyYtwjifjGJJwjT-lOx8QgN6XRe9T1UmUWXe17Tc5ZVLMRwmJeRE&usqp=CAU' />\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                <span>like</span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLenghtCreator, required } from '../../../utils/validators/validators';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            <p className={s.myPostTitle}>My posts</p>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxlenght15 = maxLenghtCreator(15)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.newpost}>\r\n            <Field component={Textarea} name={'newPostText'} rows={'5'} cols={'33'} placeholder={'Enter your post'}></Field>\r\n            <div><button className={s.postButton}>Add post</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm)\r\nexport default MyPosts;","import { addPost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n       posts: state.profilePage.posts,\r\n       newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__DApS-\"};","// extracted by mini-css-extract-plugin\nexport default {\"userBlock\":\"ProfileInfo_userBlock__SPEW6\",\"avatar\":\"ProfileInfo_avatar__XZEYh\",\"inputChangePhoto\":\"ProfileInfo_inputChangePhoto__tQ-03\",\"userDescription\":\"ProfileInfo_userDescription__vHgxS\",\"profileStatus\":\"ProfileInfo_profileStatus__0pSr3\",\"textProfileStatusOwner\":\"ProfileInfo_textProfileStatusOwner__zu8Z0\",\"inputProfileStatus\":\"ProfileInfo_inputProfileStatus__xwbL8\",\"contacts\":\"ProfileInfo_contacts__94eun\",\"contactsBlock\":\"ProfileInfo_contactsBlock__vDidk\",\"contact\":\"ProfileInfo_contact__Ei3ah\",\"aboutMeBlock\":\"ProfileInfo_aboutMeBlock__uIauc\",\"aboutMe\":\"ProfileInfo_aboutMe__1DjUL\",\"lookingJob\":\"ProfileInfo_lookingJob__B3Qlv\",\"lookingJobSmile\":\"ProfileInfo_lookingJobSmile__zm+fh\",\"buttonChangeProfile\":\"ProfileInfo_buttonChangeProfile__TyzfK\"};","import React, { useEffect, useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status); \r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.isOwner?\r\n            <div>\r\n            {editMode?\r\n            <div className={s.inputProfileStatus}><input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } value={status}></input></div> :\r\n            <div className={s.textProfileStatusOwner}><p onClick={ activateEditMode }>{props.status || 'Enter a status'}</p></div>\r\n            }\r\n            </div>\r\n            :<div><p>{props.status}</p></div>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\"\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport s from './ProfileInfo.module.css'\r\nimport style from './../../Login/Login.module.css'\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n             <div className={s.aboutMeBlock}>\r\n            <h1>Info</h1>\r\n            <div className={s.aboutMe}>\r\n                <h2>Name</h2>\r\n                <Field placeholder={'Name'} name='fullName' component={Input} />\r\n            </div>\r\n            <div className={s.aboutMe}>\r\n                <h2>About Me:</h2>\r\n                <Field placeholder={'About me'} name='aboutMe' component={Textarea} />\r\n            </div>\r\n            <div className={`${s.aboutMe} + ${s.lookingJob}`}>\r\n                <h2>Looking job:</h2>\r\n                <Field name='lookingForAJob' component={Input} type={'checkbox'} />\r\n            </div>\r\n            <div className={s.aboutMe}>\r\n                <h2>Description Looking Job:</h2>\r\n                <Field placeholder={'Desccription looking job'} name='lookingForAJobDescription' component={Textarea} />\r\n            </div>\r\n            <div className={s.contactsBlock}>\r\n                <h2>Contacts</h2>\r\n                <div>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <div key={key} className={s.contacts}>\r\n                            {key}: <Field placeholder={key} name={`contacts.${key}`} component={Input} />\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {props.error && <div className={style.formSummaryError}>{props.error}</div>}\r\n        <button className={s.buttonChangeProfile}>Save changes</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileReduxDataForm = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\nexport default ProfileReduxDataForm","import s from './ProfileInfo.module.css';\r\nimport facebook from '../../../assets/images/facebook.png'\r\nimport twitter from '../../../assets/images/twitter.png'\r\nimport instagram from '../../../assets/images/instagram.png'\r\nimport vkontakte from '../../../assets/images/vk.png'\r\nimport github from '../../../assets/images/github.png'\r\nimport youtube from '../../../assets/images/youtube.png'\r\nimport smile from '../../../assets/images/smile.png'\r\nimport frown from '../../../assets/images/frown.png'\r\nimport avatar from './../../../assets/images/user.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileReduxDataForm from './ProfileDataForm';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let contacts = [\r\n        { name: facebook, url: props.profile.contacts.facebook },\r\n        { name: twitter, url: props.profile.contacts.twitter },\r\n        { name: instagram, url: props.profile.contacts.instagram },\r\n        { name: vkontakte, url: props.profile.contacts.vk },\r\n        { name: github, url: props.profile.contacts.github },\r\n        { name: youtube, url: props.profile.contacts.youtube }\r\n    ]\r\n\r\n    let contactsElements = contacts.map(c => c.url && <a href={c.url} target='_blank'><img src={c.name} className={s.contact} /></a>)\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then( \r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n            )\r\n    }\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.userBlock}>\r\n                <div className={s.avatar} >\r\n                    {props.profile.photos.small ? <img src={props.profile.photos.small} /> : <img src={avatar} />}\r\n                    {props.isOwner && <input className={s.inputChangePhoto} type='file' onChange={onMainPhotoSelected} />}\r\n                </div>\r\n                <div className={s.userDescription}>\r\n                    <p>{props.profile.fullName}</p>\r\n                    <div className={s.profileStatus}>\r\n                        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} />\r\n                    </div>\r\n                    <div className={s.contacts}>\r\n                        {contactsElements}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            { editMode ? <ProfileReduxDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />  :\r\n           <ProfileData profile = {props.profile} isOwner ={props.isOwner} goToEditMode = {() => {setEditMode(true)}} />\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n        <div className={s.aboutMeBlock}>\r\n            <h1>Info</h1>\r\n            <div className={s.aboutMe}>\r\n                <h2>Name</h2>\r\n                <p>{props.profile.fullName}</p>\r\n            </div>\r\n            <div className={s.aboutMe}>\r\n                <h2>About Me:</h2>\r\n                <p>{props.profile.aboutMe}</p>\r\n            </div>\r\n            <div className={`${s.aboutMe} + ${s.lookingJob}`}>\r\n                <h2>Looking job:</h2>\r\n                <p>{props.profile.lookingForAJob ? <img src={smile} className={s.lookingJobSmile} /> : <img src={frown} className={s.lookingJobSmile} />}</p>\r\n            </div>\r\n            <div className={s.aboutMe}>\r\n                <h2>Description Looking Job:</h2>\r\n                <p>{props.profile.lookingForAJobDescription}</p>\r\n            </div>\r\n        </div>\r\n        {props.isOwner && <button onClick={props.goToEditMode} className={s.buttonChangeProfile}>Change Information</button>}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import Preloader from '../common/Preloader/Preloader';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile = {props.profile} status ={props.status} updateStatus = {props.updateStatus} isOwner = {props.isOwner} savePhoto = {props.savePhoto} saveProfile = {props.saveProfile} />\r\n            <div className={s.myposts}>\r\n            <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from '../../redux/profile-reducer';\r\nimport { useParams } from 'react-router-dom'\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = { params: useParams() };\r\n        return <Children {...props} match={match} />\r\n\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        if (userId) {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormControls_error__LSc-N\",\"errorTextTextArea\":\"FormControls_errorTextTextArea__8fq9b\",\"formControlInput\":\"FormControls_formControlInput__JrK2p\",\"errorTextInput\":\"FormControls_errorTextInput__+PqcS\"};","import React from \"react\"\r\nimport s from './FormControls.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return  (\r\n        <div className={`${s.formControlTextArea} ${hasError? s.error :  ''}`} >\r\n            <textarea {...input} {...props} />\r\n        {hasError && <div className={s.errorTextTextArea}>{meta.error}</div>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return  (\r\n        <div className={`${s.formControlInput} ${hasError? s.error :  ''}`} >\r\n            <input {...input} {...props} />\r\n        {hasError && <div className={s.errorTextInput}>{meta.error}</div>}\r\n        </div>\r\n        )\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n if (value.length > maxLenght) return `Max Lenght is ${maxLenght} symbols`\r\n return undefined\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__AhvNU\",\"loginTitle\":\"Login_loginTitle__gD67l\",\"formLogin\":\"Login_formLogin__Ytoin\",\"formSummaryError\":\"Login_formSummaryError__u5w1o\",\"formLoginInput\":\"Login_formLoginInput__+gC0a\",\"formLoginCaptcha\":\"Login_formLoginCaptcha__l4TLe\",\"loginButton\":\"Login_loginButton__5LqzN\",\"LoginCheckBox\":\"Login_LoginCheckBox__CFBQB\",\"CheckBoxText\":\"Login_CheckBoxText__mI9Gz\"};"],"names":["props","_jsxs","className","s","children","_jsx","src","message","likesCount","MyPosts","React","postsElements","posts","map","p","Post","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLenghtCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","rows","cols","placeholder","connect","state","profilePage","dispatch","editMode","setEditMode","useState","status","setStatus","useEffect","isOwner","inputProfileStatus","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","textProfileStatusOwner","onClick","activateEditMode","aboutMeBlock","aboutMe","Input","concat","lookingJob","type","contactsBlock","Object","keys","profile","contacts","key","error","style","formSummaryError","buttonChangeProfile","ProfileData","fullName","lookingForAJob","lookingJobSmile","lookingForAJobDescription","goToEditMode","contactsElements","url","facebook","twitter","instagram","vk","github","youtube","c","href","target","contact","profileInfo","userBlock","avatar","photos","small","inputChangePhoto","files","length","savePhoto","userDescription","profileStatus","ProfileStatusWithHooks","ProfileReduxDataForm","initialValues","formData","saveProfile","then","ProfileInfo","myposts","MyPostsContainer","Preloader","withRouter","Children","match","params","useParams","ProfileContainer","refreshProfile","userId","this","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","render","Profile","compose","auth","isAuth","withAuthRedirect","_ref","input","meta","hasError","touched","formControlTextArea","errorTextTextArea","_ref2","formControlInput","errorTextInput","required","maxLenght"],"sourceRoot":""}