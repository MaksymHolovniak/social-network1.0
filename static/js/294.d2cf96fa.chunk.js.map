{"version":3,"file":"static/js/294.d2cf96fa.chunk.js","mappings":"gMACA,QAAwB,qBAAxB,EAA0D,0BAA1D,EAAgG,yBAAhG,EAA4I,gCAA5I,EAA6L,8BAA7L,EAAyO,2BAAzO,EAAoR,6BAApR,EAAgU,4B,2CCQhU,MAYMA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAZJE,IAEXC,EAAAA,EAAAA,MAAA,QAAMC,SAAUF,EAAMG,aAAcC,UAAWC,EAAYC,SAAA,CACtDN,EAAMO,QAASC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAmBC,SAAEN,EAAMO,SAC3DC,EAAAA,EAAAA,KAAA,OAAAF,UAAKE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,YAAa,QAASC,KAAM,QAASC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,GAAWX,UAAWC,OACpGG,EAAAA,EAAAA,KAAA,OAAAF,UAAKE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,YAAa,WAAYC,KAAM,WAAYC,UAAWC,EAAAA,EAAOC,SAAU,CAACC,EAAAA,GAAWC,KAAK,WAAWZ,UAAWC,OAC1HG,EAAAA,EAAAA,KAAA,UAAQJ,UAAWC,EAAcC,SAAC,WAClCL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EAAKE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACG,UAAW,QAASD,KAAM,aAAcK,KAAM,WAAYZ,UAAWC,KAAkBG,EAAAA,EAAAA,KAAA,QAAMJ,UAAWC,EAAeC,SAAC,wBA6BhJ,GAAeW,EAAAA,EAAAA,KANUC,IACd,CACHC,OAAQD,EAAME,KAAKD,UAIc,CAACE,MAAK,MAA/C,EAtBerB,GAKRA,EAAMmB,QACEX,EAAAA,EAAAA,KAACc,EAAAA,GAAQ,CAACC,GAAG,cAIpBtB,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAQC,SAAA,EACpBE,EAAAA,EAAAA,KAAA,MAAIJ,UAAWC,EAAaC,SAAC,aAC7BE,EAAAA,EAAAA,KAACX,EAAc,CAACK,SAXNsB,IACdxB,EAAMqB,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAW,Q,kDCxB3E,SAAgB,MAAQ,4BAA4B,kBAAoB,wCAAwC,iBAAmB,uCAAuC,eAAiB,sC,aCEpL,MAAMC,EAAWC,IAA8B,IAA7B,MAACC,EAAK,KAAEC,KAAS/B,GAAM6B,EAE5C,MAAMG,EAAWD,EAAKE,SAAWF,EAAKxB,MACtC,OACIN,EAAAA,EAAAA,MAAA,OAAKG,UAAS,GAAA8B,OAAK7B,EAAE8B,oBAAmB,KAAAD,OAAIF,EAAU3B,EAAEE,MAAS,IAAKD,SAAA,EAClEE,EAAAA,EAAAA,KAAA,eAAcsB,KAAW9B,IAC5BgC,IAAYxB,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAE+B,kBAAkB9B,SAAEyB,EAAKxB,UAClD,EAIDM,EAAQwB,IAA8B,IAA7B,MAACP,EAAK,KAAEC,KAAS/B,GAAMqC,EAEzC,MAAML,EAAWD,EAAKE,SAAWF,EAAKxB,MACtC,OACIN,EAAAA,EAAAA,MAAA,OAAKG,UAAS,GAAA8B,OAAK7B,EAAEiC,iBAAgB,KAAAJ,OAAIF,EAAU3B,EAAEE,MAAS,IAAKD,SAAA,EAC/DE,EAAAA,EAAAA,KAAA,YAAWsB,KAAW9B,IACzBgC,IAAYxB,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAEkC,eAAejC,SAAEyB,EAAKxB,UAC/C,C,0CCrBP,MAAMQ,EAAYyB,IACrB,IAAIA,EACJ,MAAO,mBAAmB,EAGjBC,EAAoBC,GAAeF,IAC/C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAANR,OAAwBQ,EAAS,WAC/C,C","sources":["webpack://react-project1/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","webpack://react-project1/./src/components/common/FormsControls/FormControls.module.css?2a3b","components/common/FormsControls/FormsControls.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__AhvNU\",\"loginTitle\":\"Login_loginTitle__gD67l\",\"formLogin\":\"Login_formLogin__Ytoin\",\"formSummaryError\":\"Login_formSummaryError__u5w1o\",\"formLoginInput\":\"Login_formLoginInput__+gC0a\",\"loginButton\":\"Login_loginButton__5LqzN\",\"LoginCheckBox\":\"Login_LoginCheckBox__CFBQB\",\"CheckBoxText\":\"Login_CheckBoxText__mI9Gz\"};","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport s from './Login.module.css'\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.formLogin}>\r\n            {props.error && <div className={s.formSummaryError}>{props.error}</div>}\r\n            <div><Field placeholder={'Email'} name={\"email\"} component={Input} validate={[required]} className={s.formLoginInput}  /></div>\r\n            <div><Field placeholder={'Password'} name={\"password\"} component={Input} validate={[required]} type=\"password\" className={s.formLoginInput} /></div>\r\n            <button className={s.loginButton}>Login</button>\r\n            <div><Field component={'input'} name={\"rememberMe\"} type={'checkbox'} className={s.LoginCheckBox}/><span className={s.CheckBoxText}>Remember me</span></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Navigate to='/profile'  />\r\n    }\r\n    \r\n    return (\r\n        <div className={s.login}>\r\n            <h1 className={s.loginTitle}>Sign Up</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, {login} ) (Login);","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormControls_error__LSc-N\",\"errorTextTextArea\":\"FormControls_errorTextTextArea__8fq9b\",\"formControlInput\":\"FormControls_formControlInput__JrK2p\",\"errorTextInput\":\"FormControls_errorTextInput__+PqcS\"};","import React from \"react\"\r\nimport s from './FormControls.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return  (\r\n        <div className={`${s.formControlTextArea} ${hasError? s.error :  ''}`} >\r\n            <textarea {...input} {...props} />\r\n        {hasError && <div className={s.errorTextTextArea}>{meta.error}</div>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return  (\r\n        <div className={`${s.formControlInput} ${hasError? s.error :  ''}`} >\r\n            <input {...input} {...props} />\r\n        {hasError && <div className={s.errorTextInput}>{meta.error}</div>}\r\n        </div>\r\n        )\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n if (value.length > maxLenght) return `Max Lenght is ${maxLenght} symbols`\r\n return undefined\r\n}"],"names":["LoginReduxForm","reduxForm","form","props","_jsxs","onSubmit","handleSubmit","className","s","children","error","_jsx","Field","placeholder","name","component","Input","validate","required","type","connect","state","isAuth","auth","login","Navigate","to","formData","email","password","rememberMe","Textarea","_ref","input","meta","hasError","touched","concat","formControlTextArea","errorTextTextArea","_ref2","formControlInput","errorTextInput","value","maxLenghtCreator","maxLenght","length"],"sourceRoot":""}