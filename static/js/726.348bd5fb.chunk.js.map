{"version":3,"file":"static/js/726.348bd5fb.chunk.js","mappings":"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","sources":["webpack://react-project1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-project1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-project1/./src/components/Profile/Profile.module.css?b512","webpack://react-project1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://react-project1/./src/components/common/FormsControls/FormControls.module.css?2a3b","components/common/FormsControls/FormsControls.js","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__FYAQ6\",\"myPostTitle\":\"MyPosts_myPostTitle__zG9Go\",\"newpost\":\"MyPosts_newpost__Oxbxl\",\"posts\":\"MyPosts_posts__CMNQ8\",\"postButton\":\"MyPosts_postButton__JVkeB\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__AdKXa\",\"post\":\"Post_post__+fweG\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.post}>\r\n                <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSV9JqkBrfwaFEIRaVhyYtwjifjGJJwjT-lOx8QgN6XRe9T1UmUWXe17Tc5ZVLMRwmJeRE&usqp=CAU' />\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                <span>like</span>{props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import { Field, reduxForm } from 'redux-form';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { maxLenghtCreator, required } from '../../../utils/validators/validators';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    return (\r\n        <div className={s.content}>\r\n            <p className={s.myPostTitle}>My posts</p>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst maxlenght15 = maxLenghtCreator(15)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.newpost}>\r\n            <Field component={Textarea} name={'newPostText'} rows={'5'} cols={'33'} placeholder={'Enter your post'} validate={[required, maxlenght15]}></Field>\r\n            <div><button className={s.postButton}>Add post</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm)\r\nexport default MyPosts;","import { addPost } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n       posts: state.profilePage.posts,\r\n       newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__DApS-\"};","// extracted by mini-css-extract-plugin\nexport default {\"userBlock\":\"ProfileInfo_userBlock__SPEW6\",\"avatar\":\"ProfileInfo_avatar__XZEYh\",\"inputChangePhoto\":\"ProfileInfo_inputChangePhoto__tQ-03\",\"userDescription\":\"ProfileInfo_userDescription__vHgxS\",\"profileStatus\":\"ProfileInfo_profileStatus__0pSr3\",\"inputProfileStatus\":\"ProfileInfo_inputProfileStatus__xwbL8\",\"contacts\":\"ProfileInfo_contacts__94eun\",\"contact\":\"ProfileInfo_contact__Ei3ah\",\"aboutMeBlock\":\"ProfileInfo_aboutMeBlock__uIauc\",\"aboutMe\":\"ProfileInfo_aboutMe__1DjUL\",\"lookingJob\":\"ProfileInfo_lookingJob__B3Qlv\",\"lookingJobSmile\":\"ProfileInfo_lookingJobSmile__zm+fh\"};","import React, { useEffect, useState } from 'react'\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status); \r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.isOwner?\r\n            <div>\r\n            {editMode?\r\n            <div className={s.inputProfileStatus}><input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } value={status}></input></div> :\r\n            <div><p onClick={ activateEditMode }>{props.status || 'Enter a status'}</p></div>\r\n            }\r\n            </div>\r\n            :<div><p>{props.status}</p></div>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from './ProfileInfo.module.css';\r\nimport facebook from '../../../assets/images/facebook.png'\r\nimport twitter from '../../../assets/images/twitter.png'\r\nimport instagram from '../../../assets/images/instagram.png'\r\nimport vkontakte from '../../../assets/images/vk.png'\r\nimport github from '../../../assets/images/github.png'\r\nimport youtube from '../../../assets/images/youtube.png'\r\nimport smile from '../../../assets/images/smile.png'\r\nimport frown from '../../../assets/images/frown.png'\r\nimport avatar from './../../../assets/images/user.png'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    let contacts = [\r\n            {name: facebook, url: props.profile.contacts.facebook},\r\n            {name: twitter, url: props.profile.contacts.twitter},\r\n            {name: instagram, url: props.profile.contacts.instagram},\r\n            {name: vkontakte, url: props.profile.contacts.vk},\r\n            {name: github, url: props.profile.contacts.github},\r\n            {name: youtube, url: props.profile.contacts.youtube}\r\n        ]\r\n    \r\n    let contactsElements = contacts.map( c => c.url && <a href={c.url} target='_blank'><img src={c.name} className={s.contact} /></a>)\r\n        \r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.userBlock}>\r\n                <div className={s.avatar} >\r\n                    {props.profile.photos.small? <img src={props.profile.photos.small} /> : <img src={avatar} />}\r\n                    { props.isOwner && <input className={s.inputChangePhoto} type='file' onChange={onMainPhotoSelected} />}    \r\n                </div>\r\n                <div className={s.userDescription}>\r\n                    <p>{props.profile.fullName}</p>\r\n                    <div className={s.profileStatus}>\r\n                     <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} isOwner = {props.isOwner} />\r\n                    </div>\r\n                    <div className={s.contacts}>\r\n                        {contactsElements}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.aboutMeBlock}>\r\n                <h1>Info</h1>\r\n                <div className={s.aboutMe}>\r\n                <h2>Name</h2>\r\n                <p>{props.profile.fullName}</p>    \r\n                </div>\r\n                <div className={s.aboutMe}>\r\n                <h2>About Me:</h2>\r\n                <p>{props.profile.aboutMe}</p>    \r\n                </div>\r\n                <div className={`${s.aboutMe} + ${s.lookingJob}`}>\r\n                <h2>Looking job:</h2>\r\n                <p>{props.profile.aboutMe ? <img src={smile} className={s.lookingJobSmile}/> : <img src={frown} className={s.lookingJobSmile}/>}</p>    \r\n                </div>\r\n                <div className={s.aboutMe}>\r\n                <h2>Description Looking Job:</h2>\r\n                <p>{props.profile.lookingForAJobDescription}</p>    \r\n                </div>        \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default ProfileInfo;","import Preloader from '../common/Preloader/Preloader';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile = {props.profile} status ={props.status} updateStatus = {props.updateStatus} isOwner = {props.isOwner} savePhoto = {props.savePhoto} />\r\n            <div className={s.myposts}>\r\n            <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, savePhoto, updateStatus } from '../../redux/profile-reducer';\r\nimport { useParams } from 'react-router-dom'\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nexport function withRouter(Children) {\r\n    return (props) => {\r\n        const match = { params: useParams() };\r\n        return <Children {...props} match={match} />\r\n\r\n    }\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n        }\r\n        if (userId) {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormControls_error__LSc-N\",\"errorTextTextArea\":\"FormControls_errorTextTextArea__8fq9b\",\"formControlInput\":\"FormControls_formControlInput__JrK2p\",\"errorTextInput\":\"FormControls_errorTextInput__+PqcS\"};","import React from \"react\"\r\nimport s from './FormControls.module.css'\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return  (\r\n        <div className={`${s.formControlTextArea} ${hasError? s.error :  ''}`} >\r\n            <textarea {...input} {...props} />\r\n        {hasError && <div className={s.errorTextTextArea}>{meta.error}</div>}\r\n        </div>\r\n        )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error\r\n    return  (\r\n        <div className={`${s.formControlInput} ${hasError? s.error :  ''}`} >\r\n            <input {...input} {...props} />\r\n        {hasError && <div className={s.errorTextInput}>{meta.error}</div>}\r\n        </div>\r\n        )\r\n}","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n if (value.length > maxLenght) return `Max Lenght is ${maxLenght} symbols`\r\n return undefined\r\n}"],"names":["props","_jsxs","className","s","children","_jsx","src","message","likesCount","MyPosts","React","postsElements","posts","map","p","Post","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxlenght15","maxLenghtCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","rows","cols","placeholder","validate","required","connect","state","profilePage","dispatch","editMode","setEditMode","useState","status","setStatus","useEffect","isOwner","inputProfileStatus","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updateStatus","onClick","activateEditMode","contactsElements","url","profile","contacts","facebook","twitter","instagram","vk","github","youtube","c","href","target","contact","profileInfo","userBlock","avatar","photos","small","inputChangePhoto","type","files","length","savePhoto","userDescription","fullName","profileStatus","ProfileStatusWithHooks","aboutMeBlock","aboutMe","concat","lookingJob","lookingJobSmile","lookingForAJobDescription","ProfileInfo","myposts","MyPostsContainer","Preloader","withRouter","Children","match","params","useParams","ProfileContainer","refreshProfile","userId","this","getUserProfile","getStatus","componentDidMount","componentDidUpdate","prevProps","prevState","render","Profile","compose","auth","isAuth","withAuthRedirect","_ref","input","meta","hasError","touched","error","formControlTextArea","errorTextTextArea","Input","_ref2","formControlInput","errorTextInput","maxLenght"],"sourceRoot":""}